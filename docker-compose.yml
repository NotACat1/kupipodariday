version: '3.8'

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: ../deployment/Dockerfile.frontend
    env_file:
      - .env
    ports:
      - "${FRONTEND_PORT:-3000}:3000"
    networks:
      - isolated_network
    restart: unless-stopped
    depends_on:
      - backend

  backend:
    build:
      context: ./backend
      dockerfile: ../deployment/Dockerfile.backend
    env_file:
      - .env
    ports:
      - "${BACKEND_PORT:-5000}:5000"
    networks:
      - isolated_network
    restart: unless-stopped
    depends_on:
      - db

  db:
    image: postgres:17 
    env_file:
      - .env
    ports:
      - "${DB_PORT:-5432}:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql 
    networks:
      - isolated_network
    restart: unless-stopped  

  prometheus:
    image: prom/prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - isolated_network

  grafana:
    image: grafana/grafana
    ports:
      - "3001:3000"
    networks:
      - isolated_network

networks:
  isolated_network:
    driver: bridge

volumes:
  pg_data:
